# version: "3"
x-airflow-common:
  &airflow-common
  # image: ${AIRFLOW_IMAGE_NAME:-apache/airflow:2.4.1}
  build:
      context: ./build
      dockerfile: Dockerfile
  environment:
    &airflow-common-env
    AIRFLOW__CORE__DEFAULT_TIMEZONE: Asia/Jakarta
    AIRFLOW__WEBSERVER__DEFAULT_UI_TIMEZONE: Asia/Jakarta
    AIRFLOW__CORE__EXECUTOR: CeleryExecutor
    AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
    AIRFLOW__CELERY__RESULT_BACKEND: db+postgresql://airflow:airflow@postgres/airflow
    AIRFLOW__CELERY__BROKER_URL: redis://:@redis:6379/0
    AIRFLOW__CORE__FERNET_KEY: ''
    AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'false'
    AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
    # _PIP_ADDITIONAL_REQUIREMENTS:  ${_PIP_ADDITIONAL_REQUIREMENTS:-flatten_json}
  volumes:
    - ./airflow/dags:/opt/airflow/dags:rw
    - ./airflow/logs:/opt/airflow/logs:rw
    - ./airflow/plugins:/opt/airflow/plugins:rw
  user: "${AIRFLOW_UID:-50000}:${AIRFLOW_GID:-50000}"
  depends_on:
    redis:
      condition: service_healthy
    postgres:
      condition: service_healthy
services:
  postgres:
    image: postgres:13
    container_name: postgres
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - ./postgresql/data:/var/lib/postgresql/data
    ports:
      - 45432:5432
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 5s
      retries: 5
    restart: always

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - 6379:6379
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 30s
      retries: 50
    restart: always

  airflow-webserver:
    <<: *airflow-common
    command: webserver
    container_name: a_web
    # networks:
    #   - airflow_network
    ports:
      - 48080:8080
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:48080/health"]
      interval: 10s
      timeout: 10s
      retries: 5
    # environment:
    #   AIRFLOW_CONN_MYSQL_DEFAULT: mysql://root:root@localhost:43306/dev
    #   AIRFLOW_CONN_MONGO_DEFAULT: mongodb://localhost:37017/training
    restart: always

  airflow-scheduler:
    <<: *airflow-common
    container_name: a_scheduler
    command: scheduler
    restart: always

  airflow-worker:
    <<: *airflow-common
    container_name: a_worker
    command: celery worker
    restart: always
    # scale: 5

  airflow-init:
    <<: *airflow-common
    command: version
    container_name: a_init
    environment:
      <<: *airflow-common-env
      _AIRFLOW_DB_UPGRADE: 'true'
      _AIRFLOW_WWW_USER_CREATE: 'true'
      _AIRFLOW_WWW_USER_USERNAME: ${_AIRFLOW_WWW_USER_USERNAME:-airflow}
      _AIRFLOW_WWW_USER_PASSWORD: ${_AIRFLOW_WWW_USER_PASSWORD:-airflow}

  flower:
    <<: *airflow-common
    container_name: a_celery
    command: celery flower
    ports:
      - 5555:5555
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:5555/"]
      interval: 10s
      timeout: 10s
      retries: 5
    restart: always

  # MongoDB service
  mongodb:
    image: mongo:6
    container_name: mongodb
    volumes:
      - ./mongodb/data:/data/db
      - ./mongodb/init/init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    # networks:
    #   - airflow_network
    ports:
      - "37017:27017"
  # MySQL service
  mysql:
    image: mysql
    container_name: mysql-home-test
    environment:
      MYSQL_ROOT_PASSWORD: root
    # networks:
    #   - airflow_network
    ports:
      - "43306:3306"
    volumes:
      - ./mysql/init/schema.sql:/docker-entrypoint-initdb.d/setup.sql
      - ./mysql/data:/var/lib/mysql

volumes:
  airflow_data:
    driver: local
  postgres_data:
    driver: local
  mongo_data:
    driver: local
  mysql_data:
    driver: local

networks:
  airflow_network:
    driver: bridge